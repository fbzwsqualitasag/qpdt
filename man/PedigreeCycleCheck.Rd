% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_loops.R
\docType{class}
\name{PedigreeCycleCheck}
\alias{PedigreeCycleCheck}
\title{R6 Class To Find Loops in Pedigrees}
\description{
The check for loops runs on repeated depth-first-traversals of all vertices
in the directed graph that represents a pedigree.
}
\section{Private Fields}{

\describe{
\item{\code{tbl_pedigree}}{node-list representation of pedigree as tibble}
\item{\code{n_ani_col}}{column index for animal ids}
\item{\code{n_sire_col}}{column index for sire ids}
\item{\code{n_dam_col}}{column index for dam ids}
\item{\code{l_set_wgb}}{list of white, grey and black set}
\item{\code{b_report_cycle}}{Flag indicating whether vertices in a cycle must be reported}
\item{\code{tbl_cycle}}{Tibble storing pairs of parent and offspring in the cycle}
\item{\code{b_debug}}{Flag for debugging mode}
\item{\code{qprp_logger}}{Logger object from log4r}
}
}

\section{Private Methods}{

\describe{
\item{\code{dfs(p_current_vertex)}}{Depth-first-search starting at vertex p_current_vertex}
\item{\code{move_grey_black(p_current_vertex)}}{Move vertex p_current_vertex from grey set to black set}
\item{\code{move_white_grey(p_current_vertex)}}{Move vertex p_current_vertex from white set to grey set}
\item{\code{get_neighbors(p_current_vertex)}}{Find vector of neighbor vertices of current vertex p_current_vertex}
}
}

\examples{
\dontrun{
pcc <- PedigreeCycleCheck$new()
pcc$read_pedigree(ps_pedigree_path = system.file('extdata','data_sample2.csv', package = 'qprppedigree'))
pcc$has_cycle()
}

}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{PedigreeCycleCheck$new()}}
\item \href{#method-read_pedigree}{\code{PedigreeCycleCheck$read_pedigree()}}
\item \href{#method-has_cycle}{\code{PedigreeCycleCheck$has_cycle()}}
\item \href{#method-set_tbl_pedigree}{\code{PedigreeCycleCheck$set_tbl_pedigree()}}
\item \href{#method-set_n_ani_col}{\code{PedigreeCycleCheck$set_n_ani_col()}}
\item \href{#method-set_n_sire_col}{\code{PedigreeCycleCheck$set_n_sire_col()}}
\item \href{#method-set_n_dam_col}{\code{PedigreeCycleCheck$set_n_dam_col()}}
\item \href{#method-set_b_report_cycle}{\code{PedigreeCycleCheck$set_b_report_cycle()}}
\item \href{#method-set_b_debug}{\code{PedigreeCycleCheck$set_b_debug()}}
\item \href{#method-get_tbl_cycle}{\code{PedigreeCycleCheck$get_tbl_cycle()}}
\item \href{#method-clone}{\code{PedigreeCycleCheck$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initialise fields in object at creation.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PedigreeCycleCheck$new()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-read_pedigree"></a>}}
\if{latex}{\out{\hypertarget{method-read_pedigree}{}}}
\subsection{Method \code{read_pedigree()}}{
read pedigree from file given by ps_pedigree_path
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PedigreeCycleCheck$read_pedigree(
  ps_pedigree_path,
  ps_delim = "|",
  pn_ani_col = 1,
  pn_sire_col = 2,
  pn_dam_col = 3,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ps_pedigree_path}}{path to pedigree input file}

\item{\code{ps_delim}}{delimiting character between columns}

\item{\code{pn_ani_col}}{animal id column}

\item{\code{pn_sire_col}}{sire id column}

\item{\code{pn_dam_col}}{dam id column}

\item{\code{...}}{additional arguments passed to readr::read_delim}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
tbl_pedigree pedigree as tibble
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-has_cycle"></a>}}
\if{latex}{\out{\hypertarget{method-has_cycle}{}}}
\subsection{Method \code{has_cycle()}}{
Run a depth-first traversal with all vertices (animals in the pedigree)
until a cycle has been found.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PedigreeCycleCheck$has_cycle()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_tbl_pedigree"></a>}}
\if{latex}{\out{\hypertarget{method-set_tbl_pedigree}{}}}
\subsection{Method \code{set_tbl_pedigree()}}{
Setter method for the field tbl_pedigree
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PedigreeCycleCheck$set_tbl_pedigree(ptbl_pedigree)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ptbl_pedigree}}{current tibble with pedigree}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_n_ani_col"></a>}}
\if{latex}{\out{\hypertarget{method-set_n_ani_col}{}}}
\subsection{Method \code{set_n_ani_col()}}{
Setter method for n_ani_col
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PedigreeCycleCheck$set_n_ani_col(pn_ani_col)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{pn_ani_col}}{current value for index of animal column}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_n_sire_col"></a>}}
\if{latex}{\out{\hypertarget{method-set_n_sire_col}{}}}
\subsection{Method \code{set_n_sire_col()}}{
Setter method for n_sire_col
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PedigreeCycleCheck$set_n_sire_col(pn_sire_col)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{pn_sire_col}}{current value for index of sire column}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_n_dam_col"></a>}}
\if{latex}{\out{\hypertarget{method-set_n_dam_col}{}}}
\subsection{Method \code{set_n_dam_col()}}{
Setter method for n_dam_col
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PedigreeCycleCheck$set_n_dam_col(pn_dam_col)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{pn_dam_col}}{current value for index of dam column}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_b_report_cycle"></a>}}
\if{latex}{\out{\hypertarget{method-set_b_report_cycle}{}}}
\subsection{Method \code{set_b_report_cycle()}}{
Setter method for b_report_cycle
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PedigreeCycleCheck$set_b_report_cycle(pb_report_cycle)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{pb_report_cycle}}{current value for b_report_cycle}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_b_debug"></a>}}
\if{latex}{\out{\hypertarget{method-set_b_debug}{}}}
\subsection{Method \code{set_b_debug()}}{
Setter method for b_debug
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PedigreeCycleCheck$set_b_debug(pb_debug)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{pb_debug}}{current value of b_debug to be set}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_tbl_cycle"></a>}}
\if{latex}{\out{\hypertarget{method-get_tbl_cycle}{}}}
\subsection{Method \code{get_tbl_cycle()}}{
Getter method for tbl_cycle
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PedigreeCycleCheck$get_tbl_cycle()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
tbl_cycle tibble with parent offspring pairs in cycle
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PedigreeCycleCheck$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
